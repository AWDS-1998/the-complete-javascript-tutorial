{"ast":null,"code":"var _jsxFileName = \"/home/nawras/js-tutorial/material/blog/src/components/forms/UpdatePost.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport validate from \"../../utils/validation/post.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddPost = () => {\n  _s();\n\n  const [values, setValues] = useState({\n    title: \"\",\n    body: \"\"\n  });\n  const [errors, setErrors] = useState({});\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); //validation\n\n    const title = values.title ? values.title.trim() : values.title;\n    const body = values.body ? values.body.trim() : values.body;\n    const validationErrors = validate(title, body);\n    setErrors(validationErrors); // send values to back end\n    // calling the api\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      sx: {\n        mb: 2\n      },\n      label: \"Post Title\",\n      name: \"title\",\n      value: values.title,\n      onChange: handleInputChange,\n      error: !!errors.title,\n      helperText: errors.title && errors.title,\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      sx: {\n        mb: 2\n      },\n      label: \"Post Content\",\n      multiline: true,\n      rows: 6,\n      name: \"body\",\n      value: values.body,\n      onChange: handleInputChange,\n      error: !!errors.body,\n      helperText: errors.body && errors.body,\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      fullWidth: true,\n      variant: \"contained\",\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPost, \"RbNi2RTpply4DCj+8IID8erDk04=\");\n\n_c = AddPost;\nexport default AddPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPost\");","map":{"version":3,"sources":["/home/nawras/js-tutorial/material/blog/src/components/forms/UpdatePost.jsx"],"names":["useState","TextField","Button","validate","AddPost","values","setValues","title","body","errors","setErrors","handleInputChange","e","name","value","target","handleSubmit","preventDefault","trim","validationErrors","mb"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,gCAArB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AAAEO,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GAAD,CAApC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMW,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAT,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACQ,IAAD,GAAQC;AAFA,KAAD,CAAT;AAID,GAND;;AAOA,QAAME,YAAY,GAAIJ,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACK,cAAF,GAD0B,CAE1B;;AACA,UAAMV,KAAK,GAAGF,MAAM,CAACE,KAAP,GAAeF,MAAM,CAACE,KAAP,CAAaW,IAAb,EAAf,GAAqCb,MAAM,CAACE,KAA1D;AACA,UAAMC,IAAI,GAAGH,MAAM,CAACG,IAAP,GAAcH,MAAM,CAACG,IAAP,CAAYU,IAAZ,EAAd,GAAmCb,MAAM,CAACG,IAAvD;AACA,UAAMW,gBAAgB,GAAGhB,QAAQ,CAACI,KAAD,EAAQC,IAAR,CAAjC;AACAE,IAAAA,SAAS,CAACS,gBAAD,CAAT,CAN0B,CAO1B;AACA;AACD,GATD;;AAUA,sBACE;AAAM,IAAA,QAAQ,EAAEH,YAAhB;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,EAAE,EAAE;AAAEI,QAAAA,EAAE,EAAE;AAAN,OADN;AAEE,MAAA,KAAK,EAAC,YAFR;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,KAAK,EAAEf,MAAM,CAACE,KAJhB;AAKE,MAAA,QAAQ,EAAEI,iBALZ;AAME,MAAA,KAAK,EAAE,CAAC,CAACF,MAAM,CAACF,KANlB;AAOE,MAAA,UAAU,EAAEE,MAAM,CAACF,KAAP,IAAgBE,MAAM,CAACF,KAPrC;AAQE,MAAA,SAAS;AARX;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,SAAD;AACE,MAAA,EAAE,EAAE;AAAEa,QAAAA,EAAE,EAAE;AAAN,OADN;AAEE,MAAA,KAAK,EAAC,cAFR;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,IAAI,EAAE,CAJR;AAKE,MAAA,IAAI,EAAC,MALP;AAME,MAAA,KAAK,EAAEf,MAAM,CAACG,IANhB;AAOE,MAAA,QAAQ,EAAEG,iBAPZ;AAQE,MAAA,KAAK,EAAE,CAAC,CAACF,MAAM,CAACD,IARlB;AASE,MAAA,UAAU,EAAEC,MAAM,CAACD,IAAP,IAAeC,MAAM,CAACD,IATpC;AAUE,MAAA,SAAS;AAVX;AAAA;AAAA;AAAA;AAAA,YAXF,eAuBE,QAAC,MAAD;AAAQ,MAAA,SAAS,MAAjB;AAAkB,MAAA,OAAO,EAAC,WAA1B;AAAsC,MAAA,IAAI,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAjDD;;GAAMJ,O;;KAAAA,O;AAmDN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport validate from \"../../utils/validation/post.js\";\n\nconst AddPost = () => {\n  const [values, setValues] = useState({ title: \"\", body: \"\" });\n  const [errors, setErrors] = useState({});\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    //validation\n    const title = values.title ? values.title.trim() : values.title;\n    const body = values.body ? values.body.trim() : values.body;\n    const validationErrors = validate(title, body);\n    setErrors(validationErrors);\n    // send values to back end\n    // calling the api\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        sx={{ mb: 2 }}\n        label=\"Post Title\"\n        name=\"title\"\n        value={values.title}\n        onChange={handleInputChange}\n        error={!!errors.title}\n        helperText={errors.title && errors.title}\n        fullWidth\n      />\n      <TextField\n        sx={{ mb: 2 }}\n        label=\"Post Content\"\n        multiline\n        rows={6}\n        name=\"body\"\n        value={values.body}\n        onChange={handleInputChange}\n        error={!!errors.body}\n        helperText={errors.body && errors.body}\n        fullWidth\n      />\n      <Button fullWidth variant=\"contained\" type=\"submit\">\n        Submit\n      </Button>\n    </form>\n  );\n};\n\nexport default AddPost;\n"]},"metadata":{},"sourceType":"module"}