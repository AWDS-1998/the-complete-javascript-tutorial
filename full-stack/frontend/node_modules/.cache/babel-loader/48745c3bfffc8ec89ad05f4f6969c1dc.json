{"ast":null,"code":"const messages = {\n  required: \"frontend: This field is required\",\n  minLength: min => `frontend: This field must contain more than ${min} chars`,\n  maxLength: max => `frontend: This field must contain less than ${max} chars`\n};\nconst rules = {\n  required: val => val ? \"pass\" : messages.required,\n  minLength: (val, min) => val.length < min ? messages.minLength(min) : \"pass\",\n  maxLength: (val, max) => val.length > max ? messages.maxLength(max) : \"pass\"\n};\nconst validator = {\n  body: (val, min, max) => {\n    return [rules.required(val), rules.minLength(val, min), rules.maxLength(val, max)];\n  },\n  title: (val, min, max) => {\n    return [rules.required(val), rules.minLength(val, min), rules.maxLength(val, max)];\n  }\n};\n\nconst validate = (title, body) => {\n  const errors = {\n    title: \"\",\n    body: \"\"\n  };\n  errors.title = validator.title(title, 7, 70).find(y => y !== \"pass\") || \"\";\n  errors.body = validator.body(body, 7, 2000).find(y => y !== \"pass\") || \"\";\n  return { ...errors\n  };\n};\n\nexport default validate;","map":{"version":3,"sources":["/home/nawras/js-tutorial/material/blog/src/utils/validation/post.js"],"names":["messages","required","minLength","min","maxLength","max","rules","val","length","validator","body","title","validate","errors","find","y"],"mappings":"AAAA,MAAMA,QAAQ,GAAG;AACfC,EAAAA,QAAQ,EAAE,kCADK;AAEfC,EAAAA,SAAS,EAAGC,GAAD,IACR,+CAA8CA,GAAI,QAHtC;AAIfC,EAAAA,SAAS,EAAGC,GAAD,IACR,+CAA8CA,GAAI;AALtC,CAAjB;AAQA,MAAMC,KAAK,GAAG;AACZL,EAAAA,QAAQ,EAAGM,GAAD,IAAUA,GAAG,GAAG,MAAH,GAAYP,QAAQ,CAACC,QADhC;AAEZC,EAAAA,SAAS,EAAE,CAACK,GAAD,EAAMJ,GAAN,KACTI,GAAG,CAACC,MAAJ,GAAaL,GAAb,GAAmBH,QAAQ,CAACE,SAAT,CAAmBC,GAAnB,CAAnB,GAA6C,MAHnC;AAIZC,EAAAA,SAAS,EAAE,CAACG,GAAD,EAAMF,GAAN,KAAeE,GAAG,CAACC,MAAJ,GAAaH,GAAb,GAAmBL,QAAQ,CAACI,SAAT,CAAmBC,GAAnB,CAAnB,GAA6C;AAJ3D,CAAd;AAOA,MAAMI,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE,CAACH,GAAD,EAAMJ,GAAN,EAAWE,GAAX,KAAmB;AACvB,WAAO,CACLC,KAAK,CAACL,QAAN,CAAeM,GAAf,CADK,EAELD,KAAK,CAACJ,SAAN,CAAgBK,GAAhB,EAAqBJ,GAArB,CAFK,EAGLG,KAAK,CAACF,SAAN,CAAgBG,GAAhB,EAAqBF,GAArB,CAHK,CAAP;AAKD,GAPe;AAQhBM,EAAAA,KAAK,EAAE,CAACJ,GAAD,EAAMJ,GAAN,EAAWE,GAAX,KAAmB;AACxB,WAAO,CACLC,KAAK,CAACL,QAAN,CAAeM,GAAf,CADK,EAELD,KAAK,CAACJ,SAAN,CAAgBK,GAAhB,EAAqBJ,GAArB,CAFK,EAGLG,KAAK,CAACF,SAAN,CAAgBG,GAAhB,EAAqBF,GAArB,CAHK,CAAP;AAKD;AAde,CAAlB;;AAiBA,MAAMO,QAAQ,GAAG,CAACD,KAAD,EAAQD,IAAR,KAAiB;AAChC,QAAMG,MAAM,GAAG;AAAEF,IAAAA,KAAK,EAAE,EAAT;AAAaD,IAAAA,IAAI,EAAE;AAAnB,GAAf;AACAG,EAAAA,MAAM,CAACF,KAAP,GAAeF,SAAS,CAACE,KAAV,CAAgBA,KAAhB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8BG,IAA9B,CAAoCC,CAAD,IAAOA,CAAC,KAAK,MAAhD,KAA2D,EAA1E;AACAF,EAAAA,MAAM,CAACH,IAAP,GAAcD,SAAS,CAACC,IAAV,CAAeA,IAAf,EAAqB,CAArB,EAAwB,IAAxB,EAA8BI,IAA9B,CAAoCC,CAAD,IAAOA,CAAC,KAAK,MAAhD,KAA2D,EAAzE;AAEA,SAAO,EAAE,GAAGF;AAAL,GAAP;AACD,CAND;;AAQA,eAAeD,QAAf","sourcesContent":["const messages = {\n  required: \"frontend: This field is required\",\n  minLength: (min) =>\n    `frontend: This field must contain more than ${min} chars`,\n  maxLength: (max) =>\n    `frontend: This field must contain less than ${max} chars`,\n};\n\nconst rules = {\n  required: (val) => (val ? \"pass\" : messages.required),\n  minLength: (val, min) =>\n    val.length < min ? messages.minLength(min) : \"pass\",\n  maxLength: (val, max) => (val.length > max ? messages.maxLength(max) : \"pass\"),\n};\n\nconst validator = {\n  body: (val, min, max) => {\n    return [\n      rules.required(val),\n      rules.minLength(val, min),\n      rules.maxLength(val, max),\n    ];\n  },\n  title: (val, min, max) => {\n    return [\n      rules.required(val),\n      rules.minLength(val, min),\n      rules.maxLength(val, max),\n    ];\n  },\n};\n\nconst validate = (title, body) => {\n  const errors = { title: \"\", body: \"\" };\n  errors.title = validator.title(title, 7, 70).find((y) => y !== \"pass\") || \"\";\n  errors.body = validator.body(body, 7, 2000).find((y) => y !== \"pass\") || \"\";\n\n  return { ...errors };\n};\n\nexport default validate;\n"]},"metadata":{},"sourceType":"module"}