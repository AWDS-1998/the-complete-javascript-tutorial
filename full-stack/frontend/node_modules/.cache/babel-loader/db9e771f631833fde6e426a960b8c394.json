{"ast":null,"code":"const messages = {\n  required: \"This field is required\",\n  minLength: min => `This field must contain more than ${min} chars`,\n  maxLength: max => `This field must contain less than ${max} chars`\n};\nconst rules = {\n  required: val => val ? \"pass\" : messages.required,\n  minLength: (val, min) => val.length < min ? messages.minLength(min) : \"pass\" // maxLength: (val, max) =>\n  // val.length > max ? messages.maxLength(max) : \"pass\",\n\n};\nconst validator = {\n  // title: (val, min, max) => {\n  //   return [\n  //     rules.required(val),\n  //     rules.minLength(val, min),\n  //     // rules.maxLength(val, max),\n  //   ];\n  // },\n  body: (val, min, max) => {\n    return [rules.required(val), rules.minLength(val, min) // rules.maxLength(val, max),\n    ];\n  },\n  title: (val, min, max) => {\n    return [\"pass\", \"pass\"];\n  }\n};\n\nconst validate = (title, body) => {\n  const errors = {\n    title: \"\",\n    body: \"\"\n  };\n  console.log(\"title value is: \", title);\n  const titleValidationResults = validator.title(title, 7, 70);\n  console.log(titleValidationResults);\n  return { ...errors\n  };\n};\n\nexport default validate;","map":{"version":3,"sources":["/home/nawras/js-tutorial/material/blog/src/utils/validation/post.js"],"names":["messages","required","minLength","min","maxLength","max","rules","val","length","validator","body","title","validate","errors","console","log","titleValidationResults"],"mappings":"AAAA,MAAMA,QAAQ,GAAG;AACfC,EAAAA,QAAQ,EAAE,wBADK;AAEfC,EAAAA,SAAS,EAAGC,GAAD,IAAU,qCAAoCA,GAAI,QAF9C;AAGfC,EAAAA,SAAS,EAAGC,GAAD,IAAU,qCAAoCA,GAAI;AAH9C,CAAjB;AAMA,MAAMC,KAAK,GAAG;AACZL,EAAAA,QAAQ,EAAGM,GAAD,IAAUA,GAAG,GAAG,MAAH,GAAYP,QAAQ,CAACC,QADhC;AAEZC,EAAAA,SAAS,EAAE,CAACK,GAAD,EAAMJ,GAAN,KACTI,GAAG,CAACC,MAAJ,GAAaL,GAAb,GAAmBH,QAAQ,CAACE,SAAT,CAAmBC,GAAnB,CAAnB,GAA6C,MAHnC,CAIZ;AACA;;AALY,CAAd;AAQA,MAAMM,SAAS,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,IAAI,EAAE,CAACH,GAAD,EAAMJ,GAAN,EAAWE,GAAX,KAAmB;AACvB,WAAO,CACLC,KAAK,CAACL,QAAN,CAAeM,GAAf,CADK,EAELD,KAAK,CAACJ,SAAN,CAAgBK,GAAhB,EAAqBJ,GAArB,CAFK,CAGL;AAHK,KAAP;AAKD,GAde;AAehBQ,EAAAA,KAAK,EAAE,CAACJ,GAAD,EAAMJ,GAAN,EAAWE,GAAX,KAAmB;AACxB,WAAO,CAAC,MAAD,EAAS,MAAT,CAAP;AACD;AAjBe,CAAlB;;AAoBA,MAAMO,QAAQ,GAAG,CAACD,KAAD,EAAQD,IAAR,KAAiB;AAChC,QAAMG,MAAM,GAAG;AAAEF,IAAAA,KAAK,EAAE,EAAT;AAAaD,IAAAA,IAAI,EAAE;AAAnB,GAAf;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCJ,KAAhC;AACA,QAAMK,sBAAsB,GAAGP,SAAS,CAACE,KAAV,CAAgBA,KAAhB,EAAuB,CAAvB,EAA0B,EAA1B,CAA/B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYC,sBAAZ;AAEA,SAAO,EAAE,GAAGH;AAAL,GAAP;AACD,CAPD;;AASA,eAAeD,QAAf","sourcesContent":["const messages = {\n  required: \"This field is required\",\n  minLength: (min) => `This field must contain more than ${min} chars`,\n  maxLength: (max) => `This field must contain less than ${max} chars`,\n};\n\nconst rules = {\n  required: (val) => (val ? \"pass\" : messages.required),\n  minLength: (val, min) =>\n    val.length < min ? messages.minLength(min) : \"pass\",\n  // maxLength: (val, max) =>\n  // val.length > max ? messages.maxLength(max) : \"pass\",\n};\n\nconst validator = {\n  // title: (val, min, max) => {\n  //   return [\n  //     rules.required(val),\n  //     rules.minLength(val, min),\n  //     // rules.maxLength(val, max),\n  //   ];\n  // },\n  body: (val, min, max) => {\n    return [\n      rules.required(val),\n      rules.minLength(val, min),\n      // rules.maxLength(val, max),\n    ];\n  },\n  title: (val, min, max) => {\n    return [\"pass\", \"pass\"];\n  },\n};\n\nconst validate = (title, body) => {\n  const errors = { title: \"\", body: \"\" };\n  console.log(\"title value is: \", title);\n  const titleValidationResults = validator.title(title, 7, 70);\n  console.log(titleValidationResults);\n\n  return { ...errors };\n};\n\nexport default validate;\n"]},"metadata":{},"sourceType":"module"}