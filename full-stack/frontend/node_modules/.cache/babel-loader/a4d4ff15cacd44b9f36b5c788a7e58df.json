{"ast":null,"code":"var _jsxFileName = \"/home/nawras/js-tutorial/material/blog/src/pages/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { makeStyles } from \"@mui/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Post from \"../components/Post\";\nimport FeaturedPost from \"../components/FeaturedPost\";\nimport Sidebar from \"../components/Sidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: \"90%\"\n  },\n  rootnotsm: {\n    margin: \"1rem auto\"\n  },\n  rootsm: {\n    margin: \"3rem auto\",\n    maxWidth: \"100%\"\n  },\n  main: {\n    padding: \"1rem\"\n  },\n  sidebar: {\n    padding: \"1rem\"\n  }\n});\n\nconst Home = props => {\n  _s();\n\n  const classes = useStyles(props);\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const URL = \"https://jsonplaceholder.typicode.com/posts\";\n\n    const fetchPosts = async () => {\n      const response = await fetch(URL);\n      const posts = await response.json();\n      setPosts(posts);\n    };\n\n    setTimeout(fetchPosts, 5000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FeaturedPost, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: matches ? \"column\" : \"row\",\n      className: matches ? `${classes.root} ${classes.rootsm}` : `${classes.root} ${classes.rootnotsm}`,\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        columnSpacing: 1,\n        xs: 7,\n        className: classes.main,\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h3\",\n            variant: \"h4\",\n            gutterBottom: true,\n            children: \"Blog Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), posts && posts.length > 0 ? posts.map(post => {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Post, {\n              id: post.id,\n              title: post.title,\n              content: post.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 120\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        className: classes.sidebar,\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"LZCjetL7Aoi5I00YQHSnCk4eM3k=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/nawras/js-tutorial/material/blog/src/pages/Home.jsx"],"names":["useState","useEffect","Grid","Typography","CircularProgress","makeStyles","useMediaQuery","useTheme","Post","FeaturedPost","Sidebar","useStyles","root","maxWidth","rootnotsm","margin","rootsm","main","padding","sidebar","Home","props","classes","theme","matches","breakpoints","down","posts","setPosts","URL","fetchPosts","response","fetch","json","setTimeout","length","map","post","id","title","body"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { makeStyles } from \"@mui/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Post from \"../components/Post\";\nimport FeaturedPost from \"../components/FeaturedPost\";\nimport Sidebar from \"../components/Sidebar\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: \"90%\",\n  },\n\n  rootnotsm: {\n    margin: \"1rem auto\",\n  },\n\n  rootsm: {\n    margin: \"3rem auto\",\n    maxWidth: \"100%\",\n  },\n\n  main: {\n    padding: \"1rem\",\n  },\n\n  sidebar: {\n    padding: \"1rem\",\n  },\n});\n\nconst Home = (props) => {\n  const classes = useStyles(props);\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const URL = \"https://jsonplaceholder.typicode.com/posts\";\n    const fetchPosts = async () => {\n      const response = await fetch(URL);\n      const posts = await response.json();\n      setPosts(posts);\n    };\n    setTimeout(fetchPosts, 5000);\n  }, []);\n  return (\n    <>\n      <FeaturedPost />\n      <Grid\n        container\n        direction={matches ? \"column\" : \"row\"}\n        className={\n          matches\n            ? `${classes.root} ${classes.rootsm}`\n            : `${classes.root} ${classes.rootnotsm}`\n        }\n        justifyContent=\"space-between\"\n      >\n        <Grid container item columnSpacing={1} xs={7} className={classes.main} justifyContent=\"center\">\n          <Grid item xs={12}>\n            <Typography component=\"h3\" variant=\"h4\" gutterBottom>\n              Blog Posts\n            </Typography>\n          </Grid>\n          {posts && posts.length > 0 ? (\n            posts.map((post) => {\n              return (\n                <Grid item md={6}>\n                  <Post id={post.id} title={post.title} content={post.body} />\n                </Grid>\n              );\n            })\n          ) : (\n            <CircularProgress size={120} />\n          )}\n        </Grid>\n        <Grid item xs={4} className={classes.sidebar}>\n          <Sidebar />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}